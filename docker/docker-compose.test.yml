# docker/docker-compose.test.yml
version: "3.8"

services:
  # テスト実行用コンテナ
  test-runner:
    build:
      context: ..
      dockerfile: docker/base.Dockerfile
      args:
        - ENVIRONMENT=test
    image: root-bot-test:latest
    container_name: test-runner
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=test
      - LOG_LEVEL=DEBUG
    volumes:
      - ../tests:/app/tests:ro
      - ../topgun:/app/topgun:ro
      - ../shared:/app/shared:ro
      - ../bots:/app/bots:ro
      - test_results:/app/test_results:rw
    networks:
      - test_network
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_started
    command: >
      sh -c "
        python -m pytest tests/unit/ -v --cov=topgun --cov=shared &&
        python -m pytest tests/integration/ -v &&
        python scripts/utils/performance_test.py
      "
    profiles:
      - test

  # テスト用PostgreSQL
  postgres-test:
    image: postgres:15-alpine
    container_name: postgres-test
    environment:
      POSTGRES_DB: trading_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ../sql/init.test.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - test_network
    command: >
      postgres
      -c fsync=off
      -c synchronous_commit=off
      -c full_page_writes=off
      -c checkpoint_segments=32
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c shared_buffers=256MB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d trading_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    profiles:
      - test

  # テスト用Redis
  redis-test:
    image: redis:7-alpine
    container_name: redis-test
    command: >
      redis-server
      --save ""
      --appendonly no
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
    networks:
      - test_network
    profiles:
      - test

volumes:
  test_postgres_data:
    driver: local
  test_results:
    driver: local

networks:
  test_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
