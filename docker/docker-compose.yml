version: "3.8"

services:
  # 開発環境用 Sherrinford
  sherrinford:
    build:
      context: ..
      dockerfile: docker/base.Dockerfile
      args:
        - ENVIRONMENT=development
    image: root-bot-dev:latest
    container_name: sherrinford-dev
    env_file:
      - ../config/development.env
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - BOT_NAME=sherrinford
      - BOT_CONFIG_PATH=/app/bots/sherrinford/config.yaml
    volumes:
      - ../logs/trading:/app/logs/logs:rw
      - ../data/cache:/app/data/cache:rw
      - ../bots/sherrinford/config.yml:/app/bots/sherrinford/config.yml:ro
      - ../bots/sherrinford:/app/bots/sherrinford:ro
      - ../topgun/topgun:/app/topgun/topgun:ro
      - ../shared:/app/shared:ro
    restart: unless-stopped
    networks:
      - dev_network
    depends_on:
      - postgres
      - redis
    command: ["python", "-m", "bots.sherrinford.main"]
    user: "1000:1000"

  # Watson Bot（独立）
  watson-bot:
    build:
      context: ..
      dockerfile: docker/base.Dockerfile
    image: root-bot-base:latest
    env_file:
      - ../config/development.env
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - LOG_LEVEL=WARNING
      - BOT_NAME=watson
      - BOT_CONFIG_PATH=/app/bots/watson/config.yaml
    volumes:
      - ../logs/trading:/app/logs:rw
      - ../data/cache:/app/data/cache:rw
      - ../bots/watson/config.yaml:/app/bots/watson/config.yaml:ro
      - ../bots/watson:/app/bots/watson:ro
      - ../topgun/topgun:/app/topgun/topgun:ro
      - ../shared:/app/shared:ro
    restart: unless-stopped
    networks:
      - trading_network
    depends_on:
      - postgres
      - redis
    command: ["python", "-m", "bots.watson.main"]
    user: "1000:1000"

  # PostgreSQL（dev）
  postgres:
    image: postgres:15-alpine
    container_name: postgres-dev
    env_file:
      - ../config/development.env
    environment:
      POSTGRES_DB: trading_dev
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../sql/init.dev.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - dev_network
    command: >
      postgres
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c random_page_cost=1.1
      -c wal_buffers=8MB
      -c max_connections=20
      -c log_statement=all
      -c log_min_duration_statement=100
    # 開発環境では外部アクセス許可
    ports:
      - "127.0.0.1:5432:5432"

  # Redis
  redis:
    image: redis:7-alpine
    container_name: redis-dev
    env_file:
      - ../config/development.env
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --save ""
      --appendonly no
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --loglevel verbose
    volumes:
      - redis_data:/data
    networks:
      - dev_network
    # 開発環境では外部アクセス許可
    ports:
      - "127.0.0.1:6379:6379"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  dev_network:
    driver: bridge
    internal: false
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    driver_opts:
      com.docker.network.driver.mtu: 1500
      com.docker.network.bridge.name: br-trading-dev
    labels:
      - "environment=development"
      - "purpose=trading-dev"
